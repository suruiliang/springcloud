<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bec.cloud.service.example.mapper.AuthRoleMapper">
  <resultMap id="BaseResultMap" type="com.bec.cloud.service.example.model.AuthRole">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_pid" jdbcType="INTEGER" property="rolePid" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_status" jdbcType="INTEGER" property="roleStatus" />
    <result column="del_status" jdbcType="INTEGER" property="delStatus" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="entry_user_id" jdbcType="BIGINT" property="entryUserId" />
    <result column="operation_user_id" jdbcType="BIGINT" property="operationUserId" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_pid, org_code, role_name, role_code, role_status, del_status, record_time, 
    entry_user_id, operation_user_id, operation_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.auth_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from public.auth_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bec.cloud.service.example.model.AuthRole">
    <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.Integer">
      select nextval('auth_role_id_seq')
    </selectKey>
    insert into public.auth_role (role_id, role_pid, org_code, 
      role_name, role_code, role_status, 
      del_status, record_time, entry_user_id, 
      operation_user_id, operation_time)
    values (#{roleId,jdbcType=INTEGER}, #{rolePid,jdbcType=INTEGER}, #{orgCode,jdbcType=VARCHAR}, 
      #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{roleStatus,jdbcType=INTEGER}, 
      #{delStatus,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, #{entryUserId,jdbcType=BIGINT}, 
      #{operationUserId,jdbcType=BIGINT}, #{operationTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bec.cloud.service.example.model.AuthRole">
    <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.Integer">
      select nextval('auth_role_id_seq')
    </selectKey>
    insert into public.auth_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      role_id,
      <if test="rolePid != null">
        role_pid,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleStatus != null">
        role_status,
      </if>
      <if test="delStatus != null">
        del_status,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="entryUserId != null">
        entry_user_id,
      </if>
      <if test="operationUserId != null">
        operation_user_id,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{roleId,jdbcType=INTEGER},
      <if test="rolePid != null">
        #{rolePid,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        #{delStatus,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryUserId != null">
        #{entryUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bec.cloud.service.example.model.AuthRole">
    update public.auth_role
    <set>
      <if test="rolePid != null">
        role_pid = #{rolePid,jdbcType=INTEGER},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="delStatus != null">
        del_status = #{delStatus,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryUserId != null">
        entry_user_id = #{entryUserId,jdbcType=BIGINT},
      </if>
      <if test="operationUserId != null">
        operation_user_id = #{operationUserId,jdbcType=BIGINT},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bec.cloud.service.example.model.AuthRole">
    update public.auth_role
    set role_pid = #{rolePid,jdbcType=INTEGER},
      org_code = #{orgCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_status = #{roleStatus,jdbcType=INTEGER},
      del_status = #{delStatus,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      entry_user_id = #{entryUserId,jdbcType=BIGINT},
      operation_user_id = #{operationUserId,jdbcType=BIGINT},
      operation_time = #{operationTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <select id="selectAuthRole" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    r.*
    from public.auth_role r
    inner join public.auth_user_role ur on r.role_id=ur.role_id
    inner join public.auth_user u on ur.user_id=u.user_id
    where u.user_name = #{userName,jdbcType=VARCHAR}
    and r.role_status=0 and r.del_status=0 and u.user_status=0 and u.del_status=0
  </select>
</mapper>